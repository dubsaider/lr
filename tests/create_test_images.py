import os
import cv2
import numpy as np

def create_test_images():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ä–∞–∑–Ω—ã—Ö –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è—Ö –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ document.jpg"""
    
    # –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
    source_path = 'tests/data/document.jpg'
    generated_dir = 'tests/generated'
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∏—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if not os.path.exists(source_path):
        raise FileNotFoundError(f"–ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {source_path}")
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    os.makedirs(generated_dir, exist_ok=True)
    os.makedirs('tests/output', exist_ok=True)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    original_image = cv2.imread(source_path)
    if original_image is None:
        raise ValueError(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {source_path}")
    
    print(f"‚úÖ –ò—Å—Ö–æ–¥–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: {original_image.shape}")
    
    # –°–æ–∑–¥–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ä–∞–∑–Ω—ã—Ö –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è—Ö
    images = {
        'original.jpg': original_image,
        'rotated_90.jpg': cv2.rotate(original_image, cv2.ROTATE_90_CLOCKWISE),
        'rotated_180.jpg': cv2.rotate(original_image, cv2.ROTATE_180),
        'rotated_270.jpg': cv2.rotate(original_image, cv2.ROTATE_90_COUNTERCLOCKWISE)
    }
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    for filename, image in images.items():
        output_path = os.path.join(generated_dir, filename)
        cv2.imwrite(output_path, image)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ: {output_path} ({image.shape})")
    
    print(f"\nüéØ –°–æ–∑–¥–∞–Ω–æ {len(images)} —Ç–µ—Å—Ç–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ tests/generated/")
    
    return images

def verify_test_images():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ –≤—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"""
    generated_dir = 'tests/generated'
    expected_files = ['original.jpg', 'rotated_90.jpg', 'rotated_180.jpg', 'rotated_270.jpg']
    
    missing_files = []
    for filename in expected_files:
        path = os.path.join(generated_dir, filename)
        if not os.path.exists(path):
            missing_files.append(filename)
    
    if missing_files:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã: {missing_files}")
        return False
    else:
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        return True

if __name__ == '__main__':
    try:
        create_test_images()
        verify_test_images()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")